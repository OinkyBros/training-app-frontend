name: Release new version
run-name: New version released by ${{ github.actor }}

on:
  push:
    branches:
      - main
      
jobs:
  update-aws-deployment:
    name: Upload to S3 bucket and invalidate cache
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET: 'app.ploinky.de'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1
    environment:
      name: production
      url: https://app.ploinky.de
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up nodejs
        uses: actions/setup-node@master
      - name: Install dependencies
        run: npm install
      - name: Build static assets
        run: npm run build
      - name: Upload assets to S3
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: './dist'
      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
  
  create-github-release:
    name: Create github release
    runs-on: ubuntu-latest
    needs: update-aws-deployment
    steps:
      - name: Get current date for release
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: ${{ steps.date.outputs.date }}

  notify-discord-channel:
    name: Notify discord channel of release
    runs-on: ubuntu-latest
    needs: create-github-release
    steps:
      - name: Send discord notification
        run: "curl -X POST -H 'Accept: application/json' -H 'Content-Type: application/json' --data '{\"content\": \"data\"}' ${{ secrets.DISCORD_RELEASE_BOT_HOOK }}"